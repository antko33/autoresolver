import asyncio

import aiohttp
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message

from bot.config import API_URL, BOT_TOKEN

bot = Bot(BOT_TOKEN)
dispatcher = Dispatcher()


@dispatcher.message(Command("start"))
async def start(message: Message):
    await message.answer("–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É")


@dispatcher.message(Command("generate"))
async def generate(message: Message):
    async with aiohttp.ClientSession() as session:
        async with session.post(f"{API_URL}/generate_table") as resp:
            if resp.status == 200:
                await message.answer("–°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç")
            else:
                await message.answer("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ üòì")


async def main():
    await dispatcher.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
