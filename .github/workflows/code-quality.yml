name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements.txt
          pip install -r requirements/dev-requirements.txt

      - name: Create .env from secrets
        run: |
          echo "DB_PATH=${{ secrets.DB_PATH }}" >> .env
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "USER_ID=${{ secrets.USER_ID }}" >> .env
          echo "API_HOST=${{ secrets.API_HOST }}" >> .env
          echo "API_PORT=${{ secrets.API_PORT }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env

      - name: Run ruff
        run: |
          ruff check .

      - name: Check formatting (black)
        run: |
          black --check .

      - name: Check import order (isort)
        run: |
          isort --check-only .

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements.txt
          pip install -r requirements/dev-requirements.txt

      - name: Create .env from secrets
        run: |
          echo "DB_PATH=${{ secrets.DB_PATH }}" >> .env
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "USER_ID=${{ secrets.USER_ID }}" >> .env
          echo "API_HOST=${{ secrets.API_HOST }}" >> .env
          echo "API_PORT=${{ secrets.API_PORT }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env

      - name: Run tests
        run: |
          pytest .
